apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "radarr.fullname" . }}
  labels:
  {{- include "radarr.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
  {{- include "radarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
      {{- include "radarr.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ template "radarr.fullname" . }}
          ports:
            - name: http
              containerPort: 7878
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          volumeMounts:
            - mountPath: /var/lib/radarr
              name: config
              {{- if .Values.persistence.config.subPath }}
              subPath: {{ .Values.persistence.config.subPath }}
              {{- end }}
            {{- if .Values.persistence.media.enabled }}
            - mountPath: /media
              name: media
              {{- if .Values.persistence.media.subPath }}
              subPath: {{ .Values.persistence.media.subPath }}
              {{- end }}
            {{- end }}
          {{- if .Values.additionalVolumeMounts }}
          {{- toYaml .Values.additionalVolumes | nindent 12 }}
          {{- end }}
          resources:
      {{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: config
          {{- if .Values.persistence.config.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.config.existingClaim }}{{ .Values.persistence.config.existingClaim }}{{- else }}{{ template "radarr.fullname" . }}-config{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.persistence.media.enabled }}
        - name: media
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.media.existingClaim }}{{ .Values.persistence.media.existingClaim }}{{- else }}{{ template "radarr.fullname" . }}-media{{- end }}
        {{- end }}
        {{- if .Values.additionalVolumes }}
        {{- toYaml .Values.additionalVolumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
    {{ toYaml . | indent 8 }}
  {{- end }}
